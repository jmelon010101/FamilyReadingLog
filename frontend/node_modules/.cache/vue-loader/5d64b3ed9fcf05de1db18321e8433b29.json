{"remainingRequest":"/Users/musicmaster/Desktop/capstone4/capstone-family_reading/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/musicmaster/Desktop/capstone4/capstone-family_reading/frontend/src/components/AddReadingActivity.vue?vue&type=style&index=0&id=0f76a80a&scoped=true&lang=css&","dependencies":[{"path":"/Users/musicmaster/Desktop/capstone4/capstone-family_reading/frontend/src/components/AddReadingActivity.vue","mtime":1586912121803},{"path":"/Users/musicmaster/Desktop/capstone4/capstone-family_reading/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/musicmaster/Desktop/capstone4/capstone-family_reading/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/musicmaster/Desktop/capstone4/capstone-family_reading/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/musicmaster/Desktop/capstone4/capstone-family_reading/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/musicmaster/Desktop/capstone4/capstone-family_reading/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKbGFiZWwgewogICAgd2lkdGg6IDEwMCU7Cn0KdGV4dGFyZWEgewogICAgaGVpZ2h0OiAxMDBweDsKfQpwIHsKICAgIG1hcmdpbjogMDsKfQpmb3JtIHsKICAgIHBhZGRpbmctYm90dG9tOiAzJTsKfQpkaXYuY3VzdG9tLWNoZWNrYm94IHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIG1hcmdpbi1sZWZ0OiAxJTsKICAgIG1hcmdpbi1ib3R0b206IDA7Cn0KI3N1Ym1pdEJ1dHRvbiB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIG1hcmdpbi10b3A6IDQlOwp9Cg=="},{"version":3,"sources":["AddReadingActivity.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddReadingActivity.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n      <h4>Activity Form</h4>\n      <form v-on:submit.prevent=\"addActivity\">\n        <div class=\"form-group\">\n        <p>Book</p>\n            <select v-model=\"activity.bookId\" required>\n                <option v-for=\"book in books\" v-bind:key=\"book.bookId\" v-bind:value=\"book.bookId\">\n                    {{book.title}}\n                </option>\n            </select>\n        </div>\n          <div class=\"form-group\">\n            <p>Form Of Reading</p>\n                <select v-model=\"activity.readingFormat\">\n                    <option>Paper</option>\n                    <option>Digital</option>\n                    <option>Audiobook</option>\n                    <option>Read-Aloud(Reader)</option>\n                    <option>Read-Aloud(Listener)</option>\n                    <option>Other</option>\n                </select>\n          </div>\n          <div class=\"form-group\">\n            <label>Time Spent<b-form-input type=\"text\" v-model=\"activity.minutesSpent\" placeholder=\"minutes\" required/></label>\n          </div>\n          <div class=\"form-group\">\n            <label>Notes<b-form-textarea v-model=\"activity.bookNotes\"/></label>\n          </div>\n          <span>Have You Completed This Book?</span>\n          <b-check v-model=\"activity.completedBook\"></b-check>\n          <b-button id=\"submitButton\" type=\"submit\">Add Your Activity</b-button>\n      </form>\n  </div>\n</template>\n\n<script>\nimport auth from '@/auth';\nexport default {\n     props: {\n      currentUser: Object\n    },\n    data() {\n        return {\n            activity: {\n                userId: this.currentUser.id,\n                bookId: '',\n                readingFormat: '',\n                minutesSpent: '',\n                bookNotes: '',\n                completedBook: false\n            },\n            books: []\n        }\n    },\n    methods: {\n        addActivity() {\n           fetch(`${process.env.VUE_APP_REMOTE_API}/api/activity/`, {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + auth.getToken()\n                    },\n                body: JSON.stringify(this.activity),\n            })    \n            .then(() => this.$emit('add-log'));                                                 \n            if (!this.activity.completedBook) {\n            fetch(`${process.env.VUE_APP_REMOTE_API}/api/books/personalbookshelf/${this.activity.userId}/${this.activity.bookId}`, {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + auth.getToken()\n                    }\n                }) \n            } else {\n                fetch(`${process.env.VUE_APP_REMOTE_API}/api/books/personalbookshelf/${this.activity.userId}/${this.activity.bookId}`, {\n                method: 'DELETE',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + auth.getToken()\n                    }\n                }) \n            }\n        },\n         getAllBooks() {\n            fetch(`${process.env.VUE_APP_REMOTE_API}/api/books/${this.currentUser.familyId}`, {\n                method: 'GET',\n                headers: {\n                Accept: 'application/json',\n                Authorization: 'Bearer ' + auth.getToken()\n                }\n                })\n                .then((response) => {\n                    return response.json();\n                })\n                .then((data) => {\n                    this.books = data;\n                });\n            }\n    },\n    created() {\n        this.getAllBooks()\n    }\n}\n\n</script>\n\n<style scoped>\n    label {\n        width: 100%;\n    }\n    textarea {\n        height: 100px;\n    }\n    p {\n        margin: 0;\n    }\n    form {\n        padding-bottom: 3%;\n    }\n    div.custom-checkbox {\n        display: inline-block;\n        margin-left: 1%;\n        margin-bottom: 0;\n    }\n    #submitButton {\n        display: block;\n        margin-top: 4%;\n    }\n</style>"]}]}